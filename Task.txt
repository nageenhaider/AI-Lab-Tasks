Background
Anato's pockets are as empty as a politician's promises, yet he somehow managed to scrounge up
a few rupees by moonlighting as a professional rock-paper-scissors referee!
Now, Anato is dumb but he saw a “Become a millionaire overnight through Forex” scheme on a
poster ad at backside of a Riskha. With nonsense Dreams of becoming the next Harshad Mehta,
he downloaded an app, deposited his Rs 10,000 and started his journey to 1-click millionaire.
[ hopefully, he won’t lose all his money otherwise Anato will be very sad (ToT) ]
Lab Task:
Design an algorithm to help Anato optimize his investment portfolio allocations using the
minimax algorithm with alpha-beta pruning. The goal is to maximize returns while minimizing
risk, considering various investment options and their associated risks and returns.
You must consider the following parameters:
▪ The algorithm should take as input the available investment options, along with their
expected returns and associated risks.
▪ The algorithm should consider constraints such as the investor's risk tolerance and the
desired investment horizon.
▪ The algorithm should use the minimax algorithm with alpha-beta pruning to search for
the optimal portfolio allocation strategy.
▪ The output should be the recommended allocation of funds to each investment option,
maximizing expected returns while staying within the risk tolerance limits.

Classes & Members:
1. `InvestmentOption` class:
• `name`:
This attribute represents the name or identifier of an investment option. It could be
something like "Stocks", "Bonds", "Real Estate", etc.
• `expected_return`:
This attribute denotes the expected return of the investment option. It represents the
average return an investor can expect to receive from the investment.
• `risk`:
This attribute represents the risk associated with the investment option. It indicates the
degree of uncertainty or variability of returns associated with the investment. Typically,
higher-risk investments offer the potential for higher returns but also come with greater
uncertainty.

2. `Node` class:
• `portfolio`:
This attribute represents the current composition of the investment portfolio at a particular
node in the decision tree. It typically consists of an `InvestmentOption` object, representing
an investment option available for selection at that node.
• `remaining_budget`:
This attribute represents the remaining budget or capital available for investment at the
current node. It indicates how much money is left to allocate among the investment options.
• `risk_tolerance`:
This attribute represents the investor's tolerance for risk. It quantifies the level of risk the
investor is willing to accept in their investment portfolio. It is used to adjust the evaluation of
the portfolio's performance by considering the investor's risk preferences.
• `investment_horizon`:
This attribute represents the investment horizon, which is the length of time an investor plans
to hold onto their investments before selling them. It provides context for evaluating the
performance of the portfolio over a specific time period.
• `value`:
This attribute represents the value associated with the node in the decision tree. In the
context of the investment portfolio problem, it could represent the expected return, the utility
of the portfolio, or any other measure used to evaluate the desirability of the investment
strategy represented by the node.

Hints:
1. Represent the investment options and their characteristics (returns, risks) in a data
structure.
2. Define an evaluation function that assesses the quality of a given portfolio allocation
based on expected returns and risks.
3. Use recursion to implement the minimax algorithm with alpha-beta pruning to search
through the space of possible portfolio allocations.
4. Consider factors such as diversification and correlation among investment options when
evaluating portfolio allocations.
5. Test your algorithm with different sets of investment options and risk tolerance levels to
ensure robustness and effectiveness.